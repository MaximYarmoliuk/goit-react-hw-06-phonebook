{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ThemeSelector/ThemeSelector.module.css","redux/contacts/contactsAction.js","contexts/ThemeContext/ThemeContext.js","hoc/withTheme.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ThemeSelector/ThemeSelector.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","uuid","removeContact","changeFilter","Context","createContext","ThemeContext","toggleTheme","setState","type","state","themeConfig","light","headerBg","fontColor","bodybg","dark","Provider","value","this","props","children","Component","Consumer","withTheme","WrappedComponent","theme","ContactForm","handleSubmit","e","preventDefault","handleChange","target","style","color","background","className","styles","contactForm","onSubmit","contactLabel","contactInput","onChange","contactSubmit","mapDispatchToProps","contactsAction","connect","ownProps","item","contacts","items","find","dispatch","onRemoveContact","button","onClick","normalizedFilter","filter","toLowerCase","includes","map","key","onChangeFilter","label","input","center","checkbox","checked","length","createReducer","contactActions","checkLength","string","checkOnExist","alert","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.14860b61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1NExu\",\"button\":\"ContactListItem_button__318RJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2X-Sf\",\"input\":\"Filter_input__2OY69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"ThemeSelector_checkbox__2w-UT\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { uuid } from \"uuidv4\";\r\n\r\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuid(),\r\n      name,\r\n      number\r\n    }\r\n  }\r\n}));\r\n\r\nconst removeContact = createAction(\"contacts/remove\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default {\r\n  addContact,\r\n  removeContact,\r\n  changeFilter\r\n};\r\n","import React, { Component, createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    this.setState({\r\n      type: this.state.type === \"dark\" ? \"light\" : \"dark\"\r\n    });\r\n  };\r\n\r\n  state = {\r\n    type: \"light\",\r\n    themeConfig: {\r\n      light: {\r\n        headerBg: \"#F7B30C\",\r\n        fontColor: \"black\",\r\n        bodybg: \"white\"\r\n      },\r\n      dark: {\r\n        headerBg: \"#3c3c3c\",\r\n        fontColor: \"white\",\r\n        bodybg: \"black\"\r\n      }\r\n    },\r\n    toggleTheme: this.toggleTheme\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider\r\n        value={ this.state\r\n          // type: this.state.theme,\r\n          // config: this.state.themeConfig[this.state.theme],\r\n          // onToggleTheme: this.toggleTheme\r\n        }\r\n      >\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ThemeContext from \"../contexts/ThemeContext/ThemeContext\";\r\n\r\nconst withTheme = WrappedComponent => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <WrappedComponent\r\n            {...props}\r\n            theme={theme}\r\n          />\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\nimport withTheme from \"../../hoc/withTheme\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n\r\n    this.props.addContact({ name, number });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { themeConfig, type } = this.props.theme;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          color: themeConfig[type].fontColor,\r\n          background: themeConfig[type].bodybg\r\n        }}\r\n      >\r\n        <h2>Phonebook</h2>\r\n\r\n        <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n          <label className={styles.contactLabel}>\r\n            Name\r\n            <input\r\n              className={styles.contactInput}\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.contactLabel}>\r\n            Number\r\n            <input\r\n              className={styles.contactInput}\r\n              type=\"number\"\r\n              value={this.state.number}\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.contactSubmit} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: contactsAction.addContact\r\n}\r\n\r\nexport default withTheme(connect(null, mapDispatchToProps)(ContactForm));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onRemoveContact }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className=\"TaskList-text\">\r\n        {name}: {number}\r\n      </p>\r\n      <button className={styles.button} type=\"button\" onClick={onRemoveContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  number: propTypes.string.isRequired,\r\n  onRemoveContact: propTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.items.find(item => item.id === ownProps.id);\r\n\r\n  return {\r\n    ...item\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemoveContact: () => dispatch(contactsAction.removeContact(ownProps.id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport { connect } from \"react-redux\";\r\nimport withTheme from \"../../hoc/withTheme\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, theme }) => {\r\n  const { themeConfig, type } = theme;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        color: themeConfig[type].fontColor,\r\n        background: themeConfig[type].bodybg\r\n      }}\r\n    >\r\n      <h2>Contacts</h2>\r\n      <ul className=\"Contact\">\r\n        {contacts.map(({ id }) => (\r\n          <ContactListItem key={id} id={id} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: propTypes.arrayOf(\r\n    propTypes.exact({\r\n      id: propTypes.string.isRequired,\r\n      name: propTypes.string.isRequired,\r\n      number: propTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const filteredContacts = items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n  return {\r\n    contacts: filteredContacts\r\n  };\r\n};\r\n\r\nexport default withTheme(connect(mapStateToProps)(ContactList));\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\nimport withTheme from \"../../hoc/withTheme\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, onChangeFilter, theme }) {\r\n  const { themeConfig, type } = theme;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        color: themeConfig[type].fontColor,\r\n        background: themeConfig[type].bodybg\r\n      }}\r\n    >\r\n      <label className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          className={styles.input}\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: propTypes.string.isRequired,\r\n  onChangeFilter: propTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsAction.changeFilter\r\n};\r\n\r\nexport default withTheme(\r\n  connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n);\r\n","import React from \"react\";\r\nimport styles from \"./ThemeSelector.module.css\";\r\nimport withTheme from \"../../hoc/withTheme\";\r\n\r\nconst ThemeSelector = ({ theme }) => {\r\n  return (\r\n    <div className={styles.center}>\r\n      <span className=\"label\">{theme.type}</span>\r\n      <input\r\n        type=\"checkbox\"\r\n        className={styles.checkbox}\r\n        checked={theme.type === \"dark\"}\r\n        onChange={() => theme.toggleTheme()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTheme(ThemeSelector);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ThemeSelector from \"./ThemeSelector/ThemeSelector\";\r\nimport ThemeContext from \"../contexts/ThemeContext/ThemeContext\";\r\n\r\nfunction App({ contacts }) {\r\n  return (\r\n    <ThemeContext>\r\n      <div>\r\n        <ThemeSelector />\r\n\r\n        <ContactForm />\r\n\r\n        {contacts.length >= 2 && <Filter />}\r\n\r\n        <ContactList />\r\n      </div>\r\n    </ThemeContext>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactActions from \"./contactsAction\";\r\n\r\nconst onAddAction = (state, { type, payload }) => {\r\n  const { name, number } = payload.contact;\r\n  const checkLength = string => string.length < 1;\r\n  const checkOnExist = state.find(contact => contact.name === name);\r\n\r\n  if (checkLength(`${name}`) || checkLength(`${number}`)) {\r\n    alert(\"Please, fill in all required entry fields\");\r\n    return state;\r\n  }\r\n\r\n  if (checkOnExist) {\r\n    alert(`${name} is already in contacts`);\r\n    return state;\r\n  }\r\n\r\n  return [...state, payload.contact];\r\n};\r\n\r\nconst onRemoveAction = (state, { type, payload }) => {\r\n  return state.filter(contact => contact.id !== payload);\r\n};\r\n\r\nconst onChangeFilter = (state, { type, payload }) => {\r\n  return payload;\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactActions.addContact]: onAddAction,\r\n  [contactActions.removeContact]: onRemoveAction\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactActions.changeFilter]: onChangeFilter\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__143Ym\",\"contactLabel\":\"ContactForm_contactLabel__3vryD\",\"contactInput\":\"ContactForm_contactInput__2Msk1\",\"contactSubmit\":\"ContactForm_contactSubmit__2vg9N\"};"],"sourceRoot":""}